plugins {
    id 'java'
}

group = 'me.needkg'
version = '2.0.0'

repositories {
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    maven { url = 'https://maven.enginehub.org/repo/' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://jitpack.io' }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:24.0.1'
    compileOnly 'com.github.PlaceholderAPI:PlaceholderAPI:2.11.6'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.5'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.7'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.github.TechFortress:GriefPrevention:16.18'
    implementation 'org.bstats:bstats-bukkit:3.0.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(17)
    options.compilerArgs += ['-parameters']
}

tasks.processResources {
    filesMatching('plugin.yml') {
        expand('version': version)
    }
}

// Tarefa para copiar o plugin para a pasta plugins
tasks.register('copyToPlugins', Copy) {
    from jar
    into serverDir
    doNotTrackState("Disable state tracking for plugin copy")
}

// Fazer o copyToPlugins rodar ap√≥s o build
build.finalizedBy(copyToPlugins)
